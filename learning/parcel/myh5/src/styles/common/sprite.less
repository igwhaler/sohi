/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@fe-name: 'fe';
@fe-x: 0px;
@fe-y: 0px;
@fe-offset-x: 0px;
@fe-offset-y: 0px;
@fe-width: 72px;
@fe-height: 72px;
@fe-total-width: 96px;
@fe-total-height: 240px;
@fe-image: '../../assets/images/sprite.png';
@fe: 0px 0px 0px 0px 72px 72px 96px 240px '../../assets/images/sprite.png' 'fe';
@index-name: 'index';
@index-x: 0px;
@index-y: 72px;
@index-offset-x: 0px;
@index-offset-y: -72px;
@index-width: 72px;
@index-height: 72px;
@index-total-width: 96px;
@index-total-height: 240px;
@index-image: '../../assets/images/sprite.png';
@index: 0px 72px 0px -72px 72px 72px 96px 240px '../../assets/images/sprite.png' 'index';
@favicon-name: 'favicon';
@favicon-x: 0px;
@favicon-y: 144px;
@favicon-offset-x: 0px;
@favicon-offset-y: -144px;
@favicon-width: 96px;
@favicon-height: 96px;
@favicon-total-width: 96px;
@favicon-total-height: 240px;
@favicon-image: '../../assets/images/sprite.png';
@favicon: 0px 144px 0px -144px 96px 96px 96px 240px '../../assets/images/sprite.png' 'favicon';
@spritesheet-width: 96px;
@spritesheet-height: 240px;
@spritesheet-image: '../../assets/images/sprite.png';
@spritesheet-sprites: @fe @index @favicon;
@spritesheet: 96px 240px '../../assets/images/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
